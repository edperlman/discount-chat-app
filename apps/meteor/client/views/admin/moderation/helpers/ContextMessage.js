"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const core_typings_1 = require("@rocket.chat/core-typings");
const fuselage_1 = require("@rocket.chat/fuselage");
const ui_avatar_1 = require("@rocket.chat/ui-avatar");
const ui_contexts_1 = require("@rocket.chat/ui-contexts");
const react_1 = __importDefault(require("react"));
const react_i18next_1 = require("react-i18next");
const ReportReasonCollapsible_1 = __importDefault(require("./ReportReasonCollapsible"));
const MessageContentBody_1 = __importDefault(require("../../../../components/message/MessageContentBody"));
const Attachments_1 = __importDefault(require("../../../../components/message/content/Attachments"));
const UiKitMessageBlock_1 = __importDefault(require("../../../../components/message/uikit/UiKitMessageBlock"));
const useFormatDate_1 = require("../../../../hooks/useFormatDate");
const useFormatDateAndTime_1 = require("../../../../hooks/useFormatDateAndTime");
const useFormatTime_1 = require("../../../../hooks/useFormatTime");
const useUserDisplayName_1 = require("../../../../hooks/useUserDisplayName");
const MessageReportInfo_1 = __importDefault(require("../MessageReportInfo"));
const useDeleteMessage_1 = __importDefault(require("../hooks/useDeleteMessage"));
const useDismissMessageAction_1 = require("../hooks/useDismissMessageAction");
const ContextMessage = ({ message, room, deleted, onRedirect, onChange, }) => {
    var _a, _b, _c, _d, _e, _f;
    const { t } = (0, react_i18next_1.useTranslation)();
    const isEncryptedMessage = (0, core_typings_1.isE2EEMessage)(message);
    const deleteMessage = (0, useDeleteMessage_1.default)(message._id, message.rid, onChange);
    const dismissMsgReport = (0, useDismissMessageAction_1.useDismissMessageAction)(message._id);
    const formatDateAndTime = (0, useFormatDateAndTime_1.useFormatDateAndTime)();
    const formatTime = (0, useFormatTime_1.useFormatTime)();
    const formatDate = (0, useFormatDate_1.useFormatDate)();
    const useRealName = (0, ui_contexts_1.useSetting)('UI_Use_Real_Name', false);
    const name = message.u.name || '';
    const username = message.u.username || '';
    const displayName = (0, useUserDisplayName_1.useUserDisplayName)({ name, username });
    const quotes = ((_a = message === null || message === void 0 ? void 0 : message.attachments) === null || _a === void 0 ? void 0 : _a.filter(core_typings_1.isQuoteAttachment)) || [];
    const attachments = ((_b = message === null || message === void 0 ? void 0 : message.attachments) === null || _b === void 0 ? void 0 : _b.filter((attachment) => !(0, core_typings_1.isQuoteAttachment)(attachment))) || [];
    return ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(0, jsx_runtime_1.jsx)(fuselage_1.Message.Divider, { children: formatDate(message._updatedAt) }), (0, jsx_runtime_1.jsxs)(fuselage_1.Message, { children: [(0, jsx_runtime_1.jsx)(fuselage_1.Message.LeftContainer, { children: (0, jsx_runtime_1.jsx)(ui_avatar_1.UserAvatar, { username: message.u.username }) }), (0, jsx_runtime_1.jsxs)(fuselage_1.Message.Container, { children: [(0, jsx_runtime_1.jsxs)(fuselage_1.Message.Header, { children: [(0, jsx_runtime_1.jsx)(fuselage_1.MessageName, { children: displayName }), (0, jsx_runtime_1.jsx)(jsx_runtime_1.Fragment, { children: useRealName && (0, jsx_runtime_1.jsxs)(fuselage_1.MessageUsername, { children: ["\u00A0", `@${message.u.username}`] }) }), (0, jsx_runtime_1.jsxs)(fuselage_1.Message.Timestamp, { title: formatDateAndTime(message._updatedAt), children: [formatTime(message._updatedAt !== message.ts ? message._updatedAt : message.ts), message._updatedAt !== message.ts && ` (${t('edited')})`] }), (0, jsx_runtime_1.jsx)(fuselage_1.Message.Role, { children: room.name || room.fname || 'DM' })] }), (0, jsx_runtime_1.jsxs)(fuselage_1.Message.Body, { children: [!!(quotes === null || quotes === void 0 ? void 0 : quotes.length) && (0, jsx_runtime_1.jsx)(Attachments_1.default, { attachments: quotes }), !((_c = message.blocks) === null || _c === void 0 ? void 0 : _c.length) && !!((_d = message.md) === null || _d === void 0 ? void 0 : _d.length) ? ((0, jsx_runtime_1.jsxs)(jsx_runtime_1.Fragment, { children: [(!isEncryptedMessage || message.e2e === 'done') && ((0, jsx_runtime_1.jsx)(MessageContentBody_1.default, { md: message.md, mentions: message.mentions, channels: message.channels })), message.e2e === 'pending' && t('E2E_message_encrypted_placeholder')] })) : (message.msg), !!attachments && (0, jsx_runtime_1.jsx)(Attachments_1.default, { id: (_f = (_e = message.files) === null || _e === void 0 ? void 0 : _e[0]) === null || _f === void 0 ? void 0 : _f._id, attachments: attachments }), message.blocks && (0, jsx_runtime_1.jsx)(UiKitMessageBlock_1.default, { rid: message.rid, mid: message._id, blocks: message.blocks })] }), (0, jsx_runtime_1.jsx)(ReportReasonCollapsible_1.default, { children: (0, jsx_runtime_1.jsx)(MessageReportInfo_1.default, { msgId: message._id }) })] }), (0, jsx_runtime_1.jsx)(fuselage_1.MessageToolbarWrapper, { children: (0, jsx_runtime_1.jsxs)(fuselage_1.Message.Toolbar, { children: [(0, jsx_runtime_1.jsx)(fuselage_1.MessageToolbarItem, { icon: 'checkmark-circled', title: t('Moderation_Dismiss_reports'), onClick: () => dismissMsgReport.action() }), (0, jsx_runtime_1.jsx)(fuselage_1.MessageToolbarItem, { icon: 'arrow-forward', title: t('Moderation_Go_to_message'), onClick: () => onRedirect(message._id) }), (0, jsx_runtime_1.jsx)(fuselage_1.MessageToolbarItem, { disabled: deleted, icon: 'trash', title: t('Moderation_Delete_message'), onClick: () => deleteMessage() })] }) })] })] }));
};
exports.default = ContextMessage;
